version: "3.8"
services:
  app1:
    build: ./app
    restart: always
    depends_on:
      - postgresql-primary
    networks:
      - front
      - back
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  app2:
    build: ./app
    restart: always
    depends_on:
      - postgresql-primary
    networks:
      - front
      - back
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:stable
    restart: always
    depends_on:
      - app1
      - app2
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - front
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgresql-primary:
    image: bitnami/postgresql:15
    restart: always
    environment:
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: replicador
      POSTGRESQL_REPLICATION_PASSWORD: replicapass
      POSTGRESQL_DATABASE: postgres
      POSTGRESQL_PASSWORD: ejemplo123
    volumes:
      - postgresql_data:/bitnami/postgresql
    networks:
      - back
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5

  postgresql-replica:
    image: bitnami/postgresql:15
    restart: always
    depends_on:
      - postgresql-primary
    environment:
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_REPLICATION_USER: replicador
      POSTGRESQL_REPLICATION_PASSWORD: replicapass
      POSTGRESQL_MASTER_HOST: postgresql-primary
      POSTGRESQL_MASTER_PORT_NUMBER: "5432"
      POSTGRESQL_PASSWORD: ejemplo123
    volumes:
      - postgresql_replica_data:/bitnami/postgresql
    networks:
      - back
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h postgresql-primary"]
      interval: 30s
      timeout: 5s
      retries: 5

networks:
  front:
  back:

volumes:
  postgresql_data:
  postgresql_replica_data:
